using System;
using System.Runtime.InteropServices.Marshalling;
using System.Security.Authentication;

public class Shape
{
    public virtual double CalculateArea()
    {
        return 0;
    }
}
    public class Circle : Shape
    {
        public double Radius { get; set; }
        public Circle(double radius) 
        {
            Radius = radius;
        }
        public override double CalculateArea()
        {
            return Math.PI * Radius * Radius;
        }

    }
    public class Rectangle : Shape 
    {
        public double Width { get; set; }

        public double Length { get; set; }

        public Rectangle(double width, double length)
        {
            Width = width;
            Length = length;
        }
        public override double CalculateArea()
        {
            return Width * Length;
        }
    }
class Program
{
    public static void Main()
    {
        Shape shape = new Shape();

        Circle circle = new Circle(5);

        Rectangle rectangle = new Rectangle(12, 20);

        Console.WriteLine($"area of shape : {shape.CalculateArea()}");
        Console.WriteLine($"area of the circle : {circle.CalculateArea()}");
        Console.WriteLine($"area of the rectangle : {rectangle.CalculateArea()}");
    }

}

/*area of shape : 0
area of the circle : 78.53981633974483
area of the rectangle : 240*/
